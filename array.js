// array - массив - [] - набор даннх
// []

// arr.push(...items) - добавлят элементы в конец,
// arr.pop() - извлекает элементы из конца,
// arr.shift() -извлекает элементи из начал,
// arr.unshift(...items ) - добавлят элементы в начало.

// splaice(start, deleteCount, item ): 3
// start
// deleteCount
// item

// let arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
// arr.splice(0, 2, 6);
// console.log(arr);

// let arr = [1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10];
// arr[10] = 20
// arr[11] = "Azamat"
// arr[0] = 9
// arr[100] = "hello"
// console.log(arr);

// 1  Дан массив ['a', 'b', 'c']. Добавьте ему в конец элементы 1, 2, 3.
// let arr = ["a", "b", "c"];
// arr.push(1, 2, 3);
// console.log(arr);

// 2 Даны два массива: [1, 2, 3] и [4, 5, 6]. Объедините их вместе.
// let arr1 = [1, 2, 3];
// let arr2 = [4, 5, 6];
// let arr3 = arr1.concat(arr2);
// console.log(arr3);

// 3 Дан массив [1, 2, 3]. Добавьте ему в конец элементы 4, 5, 6.
// let arr = [1, 2, 3];
// arr.push(4, 5, 6);
// console.log(arr);

// 4 Дан массив [1, 2, 3]. Добавьте ему в начало элементы 4, 5, 6.
// let arr = [1, 2, 3];
// arr.unshift(4, 5, 6);
// console.log(arr);

// 5 Дан массив ['js', 'css', 'jq']. Выведите на экран первый элемент.
// let arr = ["js", "css", "jq"];
// console.log(arr[0]);

// 6 Дан массив ['js', 'css', 'jq']. Выведите на экран последний элемент.
// let arr = ["js", "css", "jq"];
// console.log(arr[2]);

// 7  Дан массив [1, 2, 3, 4, 5]. С помощью метода slice запишите в
// новый элементы [1, 2, 3].
// let arr = [1, 2, 3, 4, 5];
// arr.splice(5, 0, 1, 2, 3);
// console.log(arr.slice(0, 3));

// 8  Дан массив [1, 2, 3, 4, 5]. С помощью метода slice запишите в новый
// элементы [4, 5].
// let arr = [1, 2, 3, 4, 5];
// console.log(arr.slice(3, 5));

// 9  Дан массив [1, 2, 3, 4, 5]. С помощью метода splice преобразуйте
// массив в [1, 4, 5].
// let arr = [1, 2, 3, 4, 5];
// arr.splice(0, 5, 1, 4, 5);
// console.log(arr);

// 10  Дан массив [1, 2, 3, 4, 5]. С помощью метода splice запишите в
// новый массив элементы [2, 3, 4].
// let arr = [1, 2, 3, 4, 5];
// arr.splice(0, 5, 2, 3, 4);
// console.log(arr);

// 11  Дан массив [1, 2, 3, 4, 5]. С помощью метода splice сделайте из него
// массив [1, 2, 3, 'a', 'b', 'c', 4, 5].
// let arr = [1, 2, 3, 4, 5];
// arr.splice(3, 0, "a", "b", "c");
// console.log(arr);

// 12  Дан массив [1, 2, 3, 4, 5]. С помощью метода splice
// сделайте из него массив [1, 'a', 'b', 2, 3, 4, 'c', 5, 'e'].
// let arr = [1, 2, 3, 4, 5];
// arr.splice(1, 0, "a", "b");
// arr.splice(6, 0, "c");
// arr.splice(8, 0, "e");
// console.log(arr);

///////////////////////////////////////////////////////

// Добавить элементы в очередь
// console.log(queue); // ['третий', 'второй', 'первый']
// Удалить элемент из очереди (первый добавленный)
// console.log(queue); // ['третий', 'второй']

// let queue = ["третий", "второй", "первый"];
// queue.pop();
// console.log(queue);

// Удалить один элемент, начиная с индекса 2
// [10, 20, 40, 50]
// Удалить три элемента, начиная с индекса 1
// [10]

// let numbers = [10, 20, 30, 40, 50];
// numbers.splice(2, 1);
// numbers.splice(1, 4);
// console.log(numbers);

// Вставить 'желтый' на место индекса 1, удалить 0 элементов
// ['красный', 'желтый', 'зеленый', 'синий']

// let colors = ["красный", "зеленый", "синий"];
// colors.splice(1, 0, "желтый");
// console.log(colors);

// Заменить 'зеленый' на 'фиолетовый'
// ['красный', 'желтый', 'фиолетовый', 'синий']

// let colors = ["красный", "зеленый", "синий"];
// colors.splice(1, 1, "желтый", "фиолетовый");
// console.log(colors);

// Добавить два элемента ('Фольксваген' и 'Тойота') начиная с индекса 1
// ['Мерседес', 'Фольксваген', 'Тойота', 'БМВ', 'Ауди']
// let cars = ["Мерседес", "БМВ", "Ауди"];
// cars.splice(1, 0, "Фольксваген", "Тойота");
// console.log(cars);

// Заменить один элемент на другой, начиная с индекса 0
// ['фиолетовый', 'желтый', 'синий']
// let colors = ["красный", "желтый", "синий"];
// colors.splice(0, 1, "фиолетовый");
// console.log(colors);

// Удалить два элемента начиная с индекса 1 и сохранить их в новом массиве
// ['груша', 'апельсин']
// let fruits = ["яблоко", "груша", "апельсин", "банан"];
// let res = fruits.splice(1, 2);
// console.log(res);

////////////////////////////////// МЕТОДЫ МАССИВА ////////////////////////////////////////

// Во всех задачах используйте только методы map, filter.

// 1. Вам дан массив: [315, 64, 75, 43, 65, 63].Найдите сумму каждого числа.
// let task1 = [315, 64, 75, 43, 65, 63];
// console.log(
//     task1.map((el) => {
//         return el + el;
//     })
// );

// 2. Вам дан массив: ['Аскар', 'Баяман', 'Калмамат']. Создайте функцию,
//  изменяющую букву а в каждом имени на я и выведите в консоль.
// let task2 = ["Аскар", "Баяман", "Калмамат"];
// console.log(
//     task2.map((el) => {
//         return el.replace("а", "я");
//     })
// );

// 3. Вам дан массив: ['Аскар', 'Баяман', 'Калмамат']. Создайте функцию,
// которая выводит только те имена, где есть буква к и выведите в консоль.
// let task3 = ["Аскар", "Баяман", "Калмамат"];
// console.log(
//     task3.filter((el) => {
//         return el.includes("к");
//     })
// );

// 4. Вам дан массив: [4, 54, 49]. Сделайте из него массив, состоящий из квадратов этих чисел.
// let task4 = [4, 54, 49];
// console.log(
//     task4.map((el) => {
//         return el * el;
//     })
// );

// 5. Вам дан массив [3134, 4, -143, -245, -214]. Оставьте в нем только отрицательные числа.
// let task5 = [3134, 4, -143, -245, -214];
// console.log(
//     task5.filter((el) => {
//         return el < 0;
//     })
// );

// 6. Вам дан массив [3, 51, 30, 54, 60]. Оставьте в нем только четные числа.
// let task6 = [3, 51, 30, 54, 60];
// console.log(
//     task6.filter((el) => {
//         return el % 2 === 0;
//     })
// );

// 7. Вам дан массив ['Бегимай', 'Баяман', 'Калмамат']. Оставьте в нем только те строки,
//  длина которых больше 5-ти символов.
// let task7 = ["Бегимай", "Баяман", "Калмамат"];
// console.log(
//     task7.filter((el) => {
//         return el.length > 5;
//     })
// );

// 8. Вам дан массив [-13, 96, -41, -28, 40]. Посчитайте количество
// отрицательных чисел в этом массиве.
// let task8 = [-13, 96, -41, -28, 40];
// console.log(
//     task8.filter((el) => {
//         return el < 0;
//     }).length
// );

// 9. Вам дан массив [3, 51, -30, -54, 60]. Оставьте в нем только положительные числа.
//  Затем извлеките квадратный корень из этих чисел, если эти числа больше 30.
// let task9 = [3, 51, -30, -54, 60];
// console.log(
//     task9
//         .filter((el) => {
//             return el > 30;
//         })
//         .map((el) => {
//             return Math.sqrt(el);
//         })
// );

// 11. Вам дан массив [NaN, 0, 77, false, -17, '',undefined, 99, null]. Создайте функцию,
// которая очищает массив от ложных (false) значений: false, null, undefined, 0, –0, NaN и "" (пустая строка).
// let task11 = [NaN, 0, 77, false, -17, "", undefined, 99, null];
// console.log(
//     task11.filter((el) => {
//         return el;
//     })
// );

// 12. Вам дан массив ['Бегимай', 'Баяман', 'Калмамат']. Выведите длину каждой строки.
// let task12 = ["Бегимай", "Баяман", "Калмамат"];
// console.log(
//     task12.map((el) => {
//         return el.length;
//     })
// );

////////////////////////////// ТАПШЫРМА //////////////////////////////////////

// Вам дан массив с строками ['асКар', 'бЯяман', 'калМмамат'].
// Используйте заглавные буквы в каждом массиве имен.
// Пример: (["john", "JACOB", "jinGleHeimer", "schmidt"])), => ["John", "Jacob", "Jingleheimer", "Schmidt"]

// let task1 = ["асКар", "бЯяман", "калМмамат"];
// console.log(
//     task1.map((el) => {
//         return el[0].toUpperCase() + el.slice(1).toLowerCase();
//     })
// );

// Преобразование данных
// Создайте массив чисел и используйте метод map(), чтобы преобразовать числа
// в строковый формат с добавлением символа "$" в начале каждой строки.
// let prices = [10, 20, 30, 40, 50];
// console.log(
//     prices.map((el) => {
//         return el + "$";
//     })
// );

// Использование map() для удвоения значений в массиве:
// [2, 4, 6, 8, 10]
// let numbers = [1, 2, 3, 4, 5];
// console.log(
//     numbers.map((el) => {
//         return el * 2;
//     })
// );

// Использование filter() для фильтрации строк по содержанию подстроки:
// 'ap'
// ['apple', 'apricot']
// let words = ["apple", "banana", "grape", "apricot", "orange"];
// console.log(
//     words.filter((el) => {
//         return el.includes("ap");
//     })
// );

// Использование map() для создания нового массива с квадратами чисел:
// [1, 4, 9, 16, 25];
// let numbers = [1, 2, 3, 4, 5];
// console.log(
//     numbers.map((el) => {
//         return el * el;
//     })
// );

// Использование map() для добавления индексов к элементам массива:
// ['1. красный', '2. зеленый', '3. синий']

//let colors = ["красный", "зеленый", "синий"];
//console.log(
//  colors.map((el, idx) => {
//        return idx + 1 + ". " + el;
//    })
//);

/////// - find( ) - //////// - some ( ) - /////////// - split ( ) - ////////// - join ( ) - //////////

// find()

// let arr = [4, 32, 45, 65, 88, 90];
// console.log(
//     arr.find((el, idx, arr) => {
//         return el % 2 === 0;
//     })
// );

// some ()
// let arr = [2, 3, 4, 545, 23, 67, 8, 90, 12];
// console.log(
//     arr.some((el) => {
//         return el > 50;
//     })
// );

// split()
// let str = "motion  web";
// console.log(str.split(" "));

// join ()
// let arr = ["Asan", "Ulan", "Doni"];
// console.log(arr.join("  "));

///////////////////// task ///////////////////////////////

// Поиск элемента в массиве
// Создайте массив чисел и используйте метод find(), чтобы найти первый элемент,
// который больше  25 определенного порогового значения.
// let numbers = [10, 20, 30, 40, 50];
// console.log(numbers.find((el) => el > 25));

// Поиск элемента с использованием функции-коллбэка
// Создайте массив строк и используйте метод find(), чтобы найти первую строку,
//  которая начинается с "b" определенной буквы.
// let words = ["apple", "banana", "cherry", "date"];
// console.log(
//     words.find((el) => {
//         return el.includes("b");
//     })
// );

// Поиск элемента по индексу
// Создайте массив чисел и используйте метод find() для нахождения элемента по его индексу 2
// let numbers = [10, 20, 30, 40, 50];
// console.log(
//     numbers.find((el, id, arr) => {
//         return id === 2;
//     })
// );

// Преобразование массива в строку
// Создайте массив строк и используйте метод join(), чтобы объединить все
// элементы массива в одну строку с определенным разделителем.
// let fruits = ["apple", "banana", "cherry"];
// console.log(fruits.join(", "));

// Объединение пути к файлу
// Создайте массив строк, представляющих части пути к файлу,
// и используйте метод join() для объединения их в один путь.
// let pathParts = ["folder", "subfolder", "file.txt"];
// console.log(pathParts.join("/"));

// Преобразование чисел в строку
// Создайте массив чисел и используйте метод join()
// для преобразования их в строку, разделенную запятой.
// let numbers = [1, 2, 3, 4, 5];
// console.log(numbers.join(","));

// Разделение строки по пробелам
// Разделите строку на массив слов, используя пробел в качестве разделителя.
// let sentence = "Это пример разделения строки на слова";
// console.log(sentence.split(" "));

// Разделение строки по запятой
// Разделите строку, содержащую перечень элементов,
// разделенных запятыми, на массив элементов.
// let items = "apple, banana, cherry, date";
// console.log(items.split(", "));

// Проверка наличия элемента больше определенного порога
// Используйте метод some(), чтобы проверить,
// есть ли в массиве хотя бы один элемент больше 15
// let numbers = [10, 5, 8, 22, 3];
// console.log(
//     numbers.some((el) => {
//         return el > 15;
//     })
// );

// Проверка наличия строк, содержащих определенную букву
// Используйте метод some(), чтобы проверить, есть ли в массиве строк хотя
//  бы одна строка, содержащая определенную букву “a”
// let words = ["apple", "banana", "cherry", "date"];
// console.log(
//     words.some((el) => {
//         return el.includes("a");
//     })
// );

// Проверка наличия элементов, удовлетворяющих условию
// Используйте метод some(), чтобы проверить, есть ли в массиве
// хотя бы один элемент, удовлетворяющий определенному условию.

// let numbers = [10, 5, 8, 22, 3];
// console.log(
//     numbers.some((el) => {
//         return el % 2 === 0;
//     })
// );

// 1. Найти первый элемент в массиве, который больше 10.
// let num = [2, 4, 13, 23, 65, 2];
// console.log(
//     num.find((el) => {
//         return el > 10;
//     })
// );

// 2. Проверить, все ли элементы массива являются положительными числами.
// let num = [3, -4, 9, 12, 0, -46, 11, 20]
// console.log(num.some((el) => {
//     return el > 0
// }));

// 3. Проверить, есть ли в массиве хотя бы один элемент, равный 0.
// let num = [3, 4, 9, 12, 0, 46, 11, 20];
// console.log(
//     num.some((el) => {
//         return el === 0;
//     })
// );

// 4. Найти первое четное число в массиве.
// let numbers = [20, 3, 45, 64, 7, 10];
// console.log(
//     numbers.find((el) => {
//         return el % 2 === 0;
//     })
// );

// 5. Проверить, все ли строки в массиве содержат более 5 символов.
// let task = ["apple", "banana", "cherry"];
// console.log(
//     task.some((el) => {
//         return el.length;
//     })
// );

// 6. Проверить, есть ли в массиве хотя бы одно отрицательное число.
// let num = [-1, 2, -4, -5, -45, -23];
// console.log(
//     num.some((el) => {
//         return el > 0;
//     })
// );

// 7. Найти первую строку в массиве, которая начинается с буквы "A".
// let str = ["Apple", "Banana", "Cherry", "Date"];
// console.log(
//     str.find((el) => {
//         return el.includes("A");
//     })
// );

// 8. Проверить, все ли элементы массива являются четными числами.
// let num = [3, 5, 34, 32, 5];
// console.log(
//     num.some((el) => {
//         return el % 2 === 0;
//     })
// );

// 9. Проверить, есть ли в массиве хотя бы одна строка, содержащая только цифры.
// let num = ["Banana", "apple", "12345", "Cherry"];
// console.log(
//     num.some((el, idx, arr) => {
//         return Number(el);
//     })
// );

// 10. Найти первый элемент массива, который делится на 3 без остатка.
// let num = [3, 45, 33, 99, 12, 5];
// console.log(
//     num.find((el) => {
//         return el % 3 === 0;
//     })
// );

// 11. Проверить, все ли элементы массива больше 0.
// let num = [-1, 2, 3, 4, 0, -4, -3];
// console.log(
//     num.some((el) => {
//         return el > 0;
//     })
// );

// 12. Проверить, есть ли в массиве хотя бы одна строка, начинающаяся с заглавной буквы.

// let task12 = ["apple", "Asan", "Ulan", "banan", "melon"];
// console.log(
//     task12.some((el) => {
//         return el[0] === el[0].toUpperCase();
//     })
// );

// 13. Найти первый элемент массива, который меньше 5.
// let task = [2,3,45,6,7,8];
// console.log(
//     task.find((el) => {
//         return el< 5;
//     })
// );

// 14. Проверить, все ли элементы массива являются строками.
// let str = ["22, 3, 4, 5, 6, 5"];
// console.log(
//     str.some((el) => {
//         return typeof el === "string";
//     })
// );

// 15. Проверить, есть ли в массиве хотя бы один элемент, равный "apple".
// let str = ["apple", "banana", "Cherry", "date"];
// console.log(
//     str.some((el) => {
//         return el === "apple";
//     })
// );

// 16. Найти первый элемент массива, который содержит подстроку "JavaScript".
// let task16 = ["apple", "banana", "CherryJavaScript", "date"];
// console.log(
//     task16.find((el) => {
//         return el.includes("JavaScript");
//     })
// );

// 17. Проверить, все ли элементы массива положительны.
// let task17 = [false, null, undefined, "123", 345];
// console.log(
//     task17.some((el) => {
//         return el;
//     })
// );

// 18. Проверить, есть ли в массиве хотя бы одна строка, длина которой больше 10 символов.
// let str = ["apple", "banana", "Cherry", "date", "qssnjfnvsveo"];
// console.log(
//     str.some((el) => {
//         return el.length > 10;
//     })
// );

// 19. Найти первый элемент массива, который является нечетным числом.
// let num = [3, 23, 44, 67, 87];
// console.log(
//     num.find((el) => {
//         return el % 2;
//     })
// );

// 20. Проверить, все ли элементы массива являются отрицательными числами.
// let num = [-12, -33, 55, 77, -97, -10];
// console.log(
//     num.some((el) => {
//         return el < 0;
//     })
// );

// 21. Проверить, есть ли в массиве хотя бы один элемент, равный "banana".
// let str = ["apple", "banana", "Cherry", "date"];
// console.log(
//     str.some((el) => {
//         return el === "banana";
//     })
// );

// 22. Найти первую строку в массиве, которая содержит только гласные буквы.
// let str = ["apple", "banana", "Cherry", "date"];
// console.log(
//     str.find((el) => {
//         return el.includes("a");
//     })
// );

// 23. Проверить, все ли элементы массива являются кратными 4 числами.
// let num = [2, 3, 4, 5, 8, 16, 12, 20];
// console.log(
//     num.some((el) => {
//         return el % 4 === 0;
//     })
// );

// 24. Проверить, есть ли в массиве хотя бы один элемент, являющийся палиндромом.
// let task24 = ["ata", "apa", "nan", "apple", "banana"];
// console.log(
//     task24.some((el) => {
//         return el === el.split("").reverse().join("");
//     })
// );

// 25. Найти первый элемент массива, который больше 100.
// let num = [23, 110, 199, 12, 11];
// console.log(
//     num.find((el) => {
//         return el > 100;
//     })
// );

// 26. Проверить, все ли элементы массива являются целыми числами.

// 27. Проверить, есть ли в массиве хотя бы одна строка, заканчивающаяся на "tion".
// let str = ["apple", "banana", "Cherry", "date", "motion"];
// console.log(
//     str.find((el) => {
//         return el.includes("tion");
//     })
// );

// 28. Найти первый элемент массива, который содержит только цифры.
// let numbers = ["123", "apple", 123, "123", "cherry", "23"];
// console.log(
//     numbers.find((el, idx, arr) => {
//         return typeof el === "number";
//     })
// );

// 29. Проверить, все ли элементы массива являются простыми числами.

// 30. Проверить, есть ли в массиве хотя бы один элемент, являющийся числом Фибоначчи.

///////////////////////////////////////////////////////////////////////////////////////

// let arr = ["Burulsun", "Askar", "Bill", "Umar", "Ulan", "Bob", "Asan"];
// for (let i = 1; i < arr.length; i += 2) {
//     arr[i] = arr[i].toUpperCase();
// }

// console.log(arr);

// let arr = ["Burulsun", "Askar", "Bill", "Umar", "Ulan", "Bob", "Asan"];
// console.log(
//     arr.map((el, idx, arr) => {
//         if (idx % 2 !== 0) {
//             return el.toUpperCase();
//         } else {
//             return el;
//         }
//     })
// );

////////////////// - 2- DZ - ////////////////////////////////////

// 1) Удвоение элементов массива Напишите функцию,
//  которая принимает массив чисел и возвращает новый массив,
//  в котором каждый элемент удвоен.
// function task1(arr) {
//     return arr.map((el) => {
//         return el + el;
//     });
// }
// console.log(task1([1, 2, 3, 4, 5]));

// 2) Преобразование строк в верхний регистр
// Напишите функцию, которая принимает массив строк и возвращает новый массив,
// в котором каждая строка преобразована в верхний регистр.

// function task2(arr) {
//     return arr.map((el) => {
//         return el.toUpperCase();
//     });
// }
// console.log(task2(["asan", "askat", "ulan", "doni"]));

// 3)  Вычисление суммы элементов массива. Напишите функцию,
// которая принимает массив чисел и возвращает сумму всех элементов.
// function task3(num) {
//     return num.map((el) => {
//         return el + el;
//     });
// }
// console.log(task3([1, 2, 3, 4, 5, 6]));

// 4) Фильтрация элементов массива
// Напишите функцию, которая принимает массив чисел и возвращает
//  новый массив, содержащий только четные числа.
// function task4(num) {
//     return num.filter((el) => {
//         return el % 2 === 0;
//     });
// }
// console.log(task4([22, 4, 1, 5, 45, 66, 78, 99, 42]));

// 5) Преобразование строк в числа
// Напишите функцию, которая принимает массив строк, содержащих числа,
//  и возвращает новый массив, в котором каждая строка преобразована в число.

// function task5(arr) {
//     return arr.map((el) => {
//         return Number(el);
//     });
// }
// console.log(task5(["2", "23", "67", "123", "0"]));

// 6) Напишите функцию, которая принимает массив чисел и
//  возвращает новый массив, содержащий только четные числа.
// function task7(arr) {
//     return arr.filter((el) => {
//         return el % 2 === 0;
//     });
// }

// console.log(task7([233, 5, 6, 89, 50, 44, 66, 90]));

// 7) Напишите функцию, которая принимает массив чисел и возвращает новый массив,
// содержащий только положительные числа.
// const numbers = [-2, -1, 0, 1, 2, 4, 5, 6];

// function task7(arr) {
//     return arr.filter((el) => {
//         return el > 0;
//     });
// }
// console.log(task7([-2, -1, 0, 1, 2, 4, 5, 6]));

// 8) Напишите функцию, которая принимает массив строк и возвращает новый массив,
//  содержащий только строки определенной длины.
// const words = ["apple", "banana", "cherry", "date", "elderberry"];
// function task8(arr) {
//     return arr.filter((el) => {
//         return el.length > 4;
//     });
// }

// console.log(task8(["apple", "banana", "cherry", "date", "elderberry"]));

// 9) Напишите функцию, которая принимает массив чисел и возвращает новый массив,
//  содержащий только уникальные значения (без повторений).
// function task9(arr) {
//     return arr.filter((el, idx, array) => {
//         return array.indexOf(el) === idx;
//     });
// }
// console.log(task9([1, 5, 3, 4, 5, 3, 6, 3, 7, 3]));

// 10) Фильтрация элементов, удовлетворяющих определенному условию
// Напишите функцию, которая принимает массив строк и возвращает новый массив,
//  содержащий только элементы, которые начинаются с определенной буквы.
// const words = ["apple", "banana", "cherry", "date", "elderberry"];
// function task10(arr) {
//     return arr.filter((el) => {
//         return el[0] === "a";
//     });
// }
// console.log(task10(words));

// 11) Напишите функцию, которая принимает массив чисел и возвращает новый массив,
//  содержащий только числа, которые больше определенного значения.
// const numbers = [10, 20, 30, 40, 50];
// function task11(arr) {
//     return arr.filter((el) => {
//         return el > 30;
//     });
// }
// console.log(task11(numbers));

// 12) Напишите функцию, которая принимает массив строк и возвращает новый массив,
//  содержащий только строки, состоящие только из заглавных букв.
// const words = ["APPLE", "Banana", "CHERRY", "date", "ELDERBERRY"];
// function task12(arr) {
//     return arr.filter((el) => {
//         return el === el.toUpperCase();
//     });
// }

// console.log(task12(words));

// 13) Напишите функцию, которая принимает массив чисел и возвращает новый массив,
//  содержащий только числа, которые являются четными и больше 5.
// const numbers = [2, 4, 6, 7, 8, 10, 11];
// function taks13(arr) {
//     return arr
//         .filter((el) => {
//             return el > 5;
//         })
//         .filter((el) => {
//             return el % 2 === 0;
//         });
// }
// console.log(taks13(numbers));

// 14) Напишите функцию, которая принимает массив значений различных типов данных и возвращает новый массив,
// содержащий только значения определенного типа.
// const values = [1, "apple", true, null, "banana", 5, false];
// function task14(arr) {
//     return arr.filter((el) => {
//         return typeof el === "string";
//     });
// }
// console.log(task14(values));

// 15) Напишите функцию, которая принимает массив чисел и возвращает
//  максимальное число из них.
// const numbers = [10, 5, 8, 3, 9];

// 16) Напишите функцию, которая принимает массив строк и возвращает их
// объединение в одну строку.
// const words = ["Hello", " ", "world", "!"];
// function task16(arr) {
//     return arr.join("");
// }
// console.log(task16(words));

// 17) Напишите функцию, которая принимает массив чисел и возвращает среднее значение.
//  const numbers = [2, 4, 6, 8, 10];

// 18) Напишите функцию, которая принимает массив элементов и возвращает
// количество вхождений спределенного элемента.
// const fruits = ["apple", "banana", "apple", "cherry", "apple"];
// console.log(
//     fruits.some((el) => {
//         return el.includes("apple");
//     })
// );

// 19) Напишите функцию, которая принимает массивы и возвращает их конкатенацию в один массив.

// 20) Напишите функцию, которая принимает массив чисел и
//  возвращает первое четное число из массива.
// const numbers = [1, 3, 5, 2, 4, 6, 7];

// function task20(arr) {
//     return arr.find((el) => {
//         return el % 2 === 0;
//     });s
// }
// console.log(task20(numbers));

// 21) Напишите функцию, которая принимает массив строк и возвращает первую строку определенной длины.
// const words = ["apple", "banana", "cherry", "date"];
// function task21(arr) {
//     return arr.find((el) => {
//         return el.length === 5;
//     });
// }
// console.log(task21(words));

// 22) Напишите функцию, которая принимает массив чисел и
//  возвращает первое положительное число из массива.
// const numbers = [-2, -1, 0, 3, 5, 7];
// function task22(arr) {
//     return arr.filter((el) => {
//         return el > 0;
//     });
// }
// console.log(task22(numbers));

// 23) Напишите функцию, которая принимает массив строк и
// возвращает первый элемент, начинающийся с определенной буквы.
// const words = ["apple", "banana", "cherry", "date"];
// function task23(arr) {
//     return arr.find((el) => {
//         return el.includes("a");
//     });
// }

// console.log(task23(words));

//////////////////////////// - reduce () - /////////////////////////////////////
// reduce():
// acc
// el
// idx
// arr

// Объединение элементов массива с определенным разделителем
// Используйте метод reduce() для объединения элементов массива с определенным разделителем.

// let items = ["apple", "banana", "cherry"];
// console.log(
//     items.reduce((acc, el, idx, arr) => {
//         return acc + " " + el;
//     })
// );

// 1. Вам дан массив с числами [5,15,315,2,13,20,9]. Найдите сумму этих чисел.
// let num = [5, 15, 315, 2, 13, 20, 9];
// console.log(
//     num.reduce((acc, el) => {
//         return acc + el;
//     })
// );

// 2. Вам дан массив с числами [5,12,314,2,13,20,9]. Найдите сумму всех четных чисел.
// let num = [5, 12, 314, 2, 13, 20, 9];
// console.log(
//     num.reduce((acc, el) => {
//         if (el % 2 === 0) {
//             return acc + el;
//         } else {
//             return acc;
//         }
//     }, 0)
// );

// 3. Вам дан массив с числами [5,15,315,2,13,20,9]. Найдите сумму чисел, которые больше 10.
// let num = [5, 15, 315, 2, 13, 20, 9];
// console.log(
//     num.reduce((acc, el) => {
//         if (el > 10) {
//             return acc + el;
//         } else {
//             return acc;
//         }
//     }, 0)
// );

// 4. Вам дан массив с числами [3,13,54,15,335, 39]. Найдите разность чисел, которые больше 10.
// let numbers = [3, 13, 54, 15, 335, 39];
// console.log(
//     numbers.reduce((acc, el) => {
//         if (el > 10) {
//             return acc - el;
//         } else {
//             return acc;
//         }
//     })
// );

// 5. Вам дан массив с строками ['Аскар', 'Баяман', 'Калмамат']. Сложите все строки и выведите длину результата.
// let str = ["Аскар", "Баяман", "Калмамат"];
// console.log(
//     str.reduce((acc, el) => {
//         return acc + el;
//     }).length
// );

// Создайте массив из чисел и найдите сумму всех элементов.
// let num = [3, 13, 54, 15, 335, 39];
// console.log(
//     num.reduce((acc, el) => {
//         return acc + el;
//     })
// );

// Создайте массив строк и объедините их в одну строку, разделяя запятой.

// let arr = ["asan", "artur", "ulan", "bob"];
// console.log(
//     arr.reduce((acc, el) => {
//         return acc + ", " + el;
//     })
// );
// Создайте массив чисел и найдите среднее значение.
// let num = [1, 2, 3, 4, 5, 6];
// console.log(
//     num.reduce((acc, el) => {
//         console.log(acc + "-acc " + el + "-el");
//         return acc + el / 2;
//     }, 0)
// );

// Создайте массив чисел и умножьте каждый элемент на определенное число.
// let num = [1, 2, 3, 4, 6, 7, 8, 9];
// console.log(
//     num.map((el) => {
//         return el * 5;
//     })
// );

// Создайте массив строк и отфильтруйте только те, которые начинаются с определенной буквы.
// let str = ["apple", "banana", "cherry", "date", "elderberry"];
// console.log(
//     str.filter((el) => {
//         return el[0].includes("a");
//     })
// );

// Создайте массив чисел и удалите из него все отрицательные значения.
// let num = [1, 2, 3, 4, -1, -2, -3, -4];
// console.log(
//     num.filter((el) => {
//         return el > 0;
//     })
// );
// Создайте массив строк и преобразуйте каждую строку в верхний регистр.
// let arr = ["apple", "banana", "cherry", "date", "elderberry"];
// console.log(
//     arr.map((el) => {
//         return el.toUpperCase();
//     })
// );

// Создайте массив чисел и найдите индекс определенного элемента.
// let num = [2, 3, 4, 5, 6, 7];
// console.log(num[4]);

// Создайте массив строк и удалите из него все элементы с определенной длиной.
// let str = ["apple", "banana", "cherry", "date", "elderberry"];
// console.log(
//     arr.filter((el) => {
//         return el.length > 5;
//     })
// );

// Создайте массив чисел и отфильтруйте только четные значения.
// let num = [22, 4, 5, 6, 76, 77, 87, 88];
// console.log(
//     num.filter((el) => {
//         return el % 2 === 0;
//     })
// );

// Создайте массив строк и отсортируйте его в обратном порядке.
// let num = [1, 2, 3, 4, 5, 6, 7, 8, 9];
// console.log(num.reverse());

// Создайте массив чисел и преобразуйте каждый элемент в строку.
// let num = [1, 2, 3, 4, 5, 6];
// console.log(num.join(" "));

// Создайте массив строк и найдите самое длинное слово.
// let str = ["apple", "banana", "cherry", "date", "elderberry"];
// console.log(
//     str.reduce((acc, el) => {
//         return el.length > acc.length ? el : acc;
//     }, "")
// );

// Создайте массив чисел и найдите сумму только положительных значений.
// let num = [4, -2, 6, -3, 90, -19, 45, 32, 12];
// console.log(
//     num.reduce((acc, el) => {
//         if (el > 0) {
//             return acc + el;
//         } else {
//             return acc;
//         }
//     })
// );

// Создайте массив строк и удалите из него все элементы, длина которых меньше заданной.

// let str = ["apple", "banana", "cherry", "date", "elderberry"];
// console.log(
//     str.filter((el) => {
//         return el.length > 5;
//     })
// );

// Создайте массив строк и объедините их с использованием определенного разделителя.

// let str = ["apple", "banana", "cherry", "date", "elderberry"];
// console.log(
//     str.reduce((acc, el) => {
//         return acc + ", " + el;
//     })
// );

// Создайте массив чисел и найдите сумму элементов на четных позициях.
// let numbers = [2, 34, 43, 45, 4, 66, 60, 73];
// console.log(
//     numbers.reduce((acc, el) => {
//         if (el % 2 === 0) {
//             return acc + el;
//         } else {
//             return acc;
//         }
//     }, 0)
// );
